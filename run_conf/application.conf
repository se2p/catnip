# https://www.playframework.com/documentation/latest/Configuration
play.http.secret.key=${?APPLICATION_SECRET}

play.i18n.langs = ["en"]

play.filters.enabled+=play.filters.cors.CORSFilter
play.filters.cors {
    allowedOrigins = [
        "http://0.0.0.0:8080",
        "http://172.18.0.1:8080",
        "http://127.0.0.1:8080",
        "http://localhost:8080",
        "http://localhost:9000",
        "http://localhost:8601",
        "*"
    ]
    allowedHttpMethods = ["GET", "POST"]
}

play.filters.hosts {
    allowed = ["172.18.0.2:9000", "localhost:9000"]
}

# running tests can take longer than the default timeout
play.server.http.idleTimeout=180s

# Scratch programs are uploaded as *.sb3 files
# those are no longer needed after parsing and should be cleaned up
play.temporaryFile {
    reaper {
        enabled = true
        initialDelay = "5 minutes"
        interval = "30 seconds"
        olderThan = "5 minutes"
    }
}

play.http.parser.maxMemoryBuffer=2M

hintGen-context {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
        fixed-pool-size = 20
    }
}

testSuite-context {
    fork-join-executor {
        parallelism-max = 4
    }
}

hintGenerator {
    # True, if received student programs that pass all tests should be added to
    # the pool of reference solutions.
    acceptNewSolutions = false
    # True, if the unit test suite for the received programs should be run.
    # No hints will be generated for the student if the program passes all tests
    # of the test suite.
    runTestSuite = false
    # path to the Whisker entry-point, servant.js
    # whiskerJS = "/whisker/servant/servant.js"
    # path to the Whisker testsuite that should be used
    # ToDo: update server to be able to handle different files for different tasks
    # whiskerTestFile = "/tests.js"

    # A directory in which all programs for which hints have been requested are
    # stored.
    receivedProgramsStoreDir = "../recv"

    # Folder layout
    # tasksBasePath/
    #   fruit/
    #       startupProgram.sb3
    #       solutions/
    #           example_solution_01.sb3
    #           […]
    #   taskID02/
    #       […]
    #   […]
    #
    # For each task the startupProgram.sb3 is the optional file that will be
    # initially loaded into the UI for students when they open the UI with a
    # `task` URL-parameter.
    # E.g. `http://www.url.com/scratch-gui?task=fruit`.
    tasksBasePath = "../tasks"

    tasks = ["fruit"]
}
